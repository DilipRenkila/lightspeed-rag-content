# ClusterExtension [olm.operatorframework.io/v1alpha1]


Description:: 
ClusterExtension is the Schema for the clusterextensions API
Type:: object

# Specification



## .spec

Description:: 
ClusterExtensionSpec defines the desired state of ClusterExtension
Type:: object
Required:: 
* installNamespace
* packageName
* serviceAccount



## .spec.preflight

Description:: 
Preflight defines the configuration of preflight checks.
Type:: object



## .spec.preflight.crdUpgradeSafety

Description:: 
CRDUpgradeSafety holds necessary configuration for the CRD Upgrade Safety preflight checks.
Type:: object



## .spec.serviceAccount

Description:: 
ServiceAccount is used to install and manage resources.
The service account is expected to exist in the InstallNamespace.
Type:: object
Required:: 
* name



## .status

Description:: 
ClusterExtensionStatus defines the observed state of ClusterExtension.
Type:: object



## .status.conditions

Description:: 

Type:: array

## .status.conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
---
This struct is intended for direct use as an array at the field path .status.conditions.  For example,
type FooStatus struct{
    // Represents the observations of a foo's current state.
    // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
    // +patchMergeKey=type
    // +patchStrategy=merge
    // +listType=map
    // +listMapKey=type
    Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`
    // other fields
}
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.installedBundle

Description:: 
InstalledBundle should only be modified when a new bundle is successfully installed. This ensures that if there
 is a previously successfully installed a bundle, and an upgrade fails, it is still communicated that there is
 still a bundle that is currently installed and owned by the ClusterExtension.
Type:: object
Required:: 
* name
* version



## .status.resolvedBundle

Description:: 

Type:: object
Required:: 
* name
* version



# API endpoints

The following API endpoints are available:

* /apis/olm.operatorframework.io/v1alpha1/clusterextensions
* DELETE: delete collection of ClusterExtension
* GET: list objects of kind ClusterExtension
* POST: create a ClusterExtension
* /apis/olm.operatorframework.io/v1alpha1/clusterextensions/{name}
* DELETE: delete a ClusterExtension
* GET: read the specified ClusterExtension
* PATCH: partially update the specified ClusterExtension
* PUT: replace the specified ClusterExtension
* /apis/olm.operatorframework.io/v1alpha1/clusterextensions/{name}/status
* GET: read status of the specified ClusterExtension
* PATCH: partially update status of the specified ClusterExtension
* PUT: replace status of the specified ClusterExtension

## /apis/olm.operatorframework.io/v1alpha1/clusterextensions

HTTP method:: DELETE
Description:: delete collection of ClusterExtension



HTTP method:: GET
Description:: list objects of kind ClusterExtension



HTTP method:: POST
Description:: create a ClusterExtension







## /apis/olm.operatorframework.io/v1alpha1/clusterextensions/{name}



HTTP method:: DELETE
Description:: delete a ClusterExtension





HTTP method:: GET
Description:: read the specified ClusterExtension



HTTP method:: PATCH
Description:: partially update the specified ClusterExtension





HTTP method:: PUT
Description:: replace the specified ClusterExtension







## /apis/olm.operatorframework.io/v1alpha1/clusterextensions/{name}/status



HTTP method:: GET
Description:: read status of the specified ClusterExtension



HTTP method:: PATCH
Description:: partially update status of the specified ClusterExtension





HTTP method:: PUT
Description:: replace status of the specified ClusterExtension





