# Authentication [config.openshift.io/v1]


Description:: 
Authentication specifies cluster-wide settings for authentication (like OAuth and webhook token authenticators). The canonical name of an instance is cluster.
 Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.oauthMetadata

Description:: 
oauthMetadata contains the discovery endpoint data for OAuth 2.0 Authorization Server Metadata for an external OAuth server. This discovery document can be viewed from its served location: oc get --raw '/.well-known/oauth-authorization-server' For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2 If oauthMetadata.name is non-empty, this value has precedence over any metadata reference stored in status. The key "oauthMetadata" is used to locate the data. If specified and the config map or expected key is not found, no metadata is served. If the specified metadata is not valid, no metadata is served. The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.oidcProviders

Description:: 
OIDCProviders are OIDC identity providers that can issue tokens for this cluster Can only be set if "Type" is set to "OIDC".
 At most one provider can be configured.
Type:: array

## .spec.oidcProviders[]

Description:: 

Type:: object
Required:: 
* issuer
* name



## .spec.oidcProviders[].claimMappings

Description:: 
ClaimMappings describes rules on how to transform information from an ID token into a cluster identity
Type:: object



## .spec.oidcProviders[].claimMappings.groups

Description:: 
Groups is a name of the claim that should be used to construct groups for the cluster identity. The referenced claim must use array of strings values.
Type:: object
Required:: 
* claim



## .spec.oidcProviders[].claimMappings.username

Description:: 
Username is a name of the claim that should be used to construct usernames for the cluster identity.
 Default value: "sub"
Type:: object
Required:: 
* claim



## .spec.oidcProviders[].claimMappings.username.prefix

Description:: 

Type:: object
Required:: 
* prefixString



## .spec.oidcProviders[].claimValidationRules

Description:: 
ClaimValidationRules are rules that are applied to validate token claims to authenticate users.
Type:: array

## .spec.oidcProviders[].claimValidationRules[]

Description:: 

Type:: object



## .spec.oidcProviders[].claimValidationRules[].requiredClaim

Description:: 
RequiredClaim allows configuring a required claim name and its expected value
Type:: object
Required:: 
* claim
* requiredValue



## .spec.oidcProviders[].issuer

Description:: 
Issuer describes atributes of the OIDC token issuer
Type:: object
Required:: 
* audiences
* issuerURL



## .spec.oidcProviders[].issuer.issuerCertificateAuthority

Description:: 
CertificateAuthority is a reference to a config map in the configuration namespace. The .data of the configMap must contain the "ca-bundle.crt" key. If unset, system trust is used instead.
Type:: object
Required:: 
* name



## .spec.oidcProviders[].oidcClients

Description:: 
OIDCClients contains configuration for the platform's clients that need to request tokens from the issuer
Type:: array

## .spec.oidcProviders[].oidcClients[]

Description:: 

Type:: object
Required:: 
* clientID
* componentName
* componentNamespace



## .spec.oidcProviders[].oidcClients[].clientSecret

Description:: 
ClientSecret refers to a secret in the openshift-config namespace that contains the client secret in the clientSecret key of the .data field
Type:: object
Required:: 
* name



## .spec.webhookTokenAuthenticator

Description:: 
webhookTokenAuthenticator configures a remote token reviewer. These remote authentication webhooks can be used to verify bearer tokens via the tokenreviews.authentication.k8s.io REST API. This is required to honor bearer tokens that are provisioned by an external authentication service.
 Can only be set if "Type" is set to "None".
Type:: object
Required:: 
* kubeConfig



## .spec.webhookTokenAuthenticator.kubeConfig

Description:: 
kubeConfig references a secret that contains kube config file data which describes how to access the remote webhook service. The namespace for the referenced secret is openshift-config.
 For further details, see:
 https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
 The key "kubeConfig" is used to locate the data. If the secret or expected key is not found, the webhook is not honored. If the specified kube config data is not valid, the webhook is not honored.
Type:: object
Required:: 
* name



## .spec.webhookTokenAuthenticators

Description:: 
webhookTokenAuthenticators is DEPRECATED, setting it has no effect.
Type:: array

## .spec.webhookTokenAuthenticators[]

Description:: 
deprecatedWebhookTokenAuthenticator holds the necessary configuration options for a remote token authenticator. It's the same as WebhookTokenAuthenticator but it's missing the 'required' validation on KubeConfig field.
Type:: object



## .spec.webhookTokenAuthenticators[].kubeConfig

Description:: 
kubeConfig contains kube config file data which describes how to access the remote webhook service. For further details, see: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication The key "kubeConfig" is used to locate the data. If the secret or expected key is not found, the webhook is not honored. If the specified kube config data is not valid, the webhook is not honored. The namespace for this secret is determined by the point of use.
Type:: object
Required:: 
* name



## .status

Description:: 
status holds observed values from the cluster. They may not be overridden.
Type:: object



## .status.integratedOAuthMetadata

Description:: 
integratedOAuthMetadata contains the discovery endpoint data for OAuth 2.0 Authorization Server Metadata for the in-cluster integrated OAuth server. This discovery document can be viewed from its served location: oc get --raw '/.well-known/oauth-authorization-server' For further details, see the IETF Draft: https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2 This contains the observed value based on cluster state. An explicitly set value in spec.oauthMetadata has precedence over this field. This field has no meaning if authentication spec.type is not set to IntegratedOAuth. The key "oauthMetadata" is used to locate the data. If the config map or expected key is not found, no metadata is served. If the specified metadata is not valid, no metadata is served. The namespace for this config map is openshift-config-managed.
Type:: object
Required:: 
* name



## .status.oidcClients

Description:: 
OIDCClients is where participating operators place the current OIDC client status for OIDC clients that can be customized by the cluster-admin.
Type:: array

## .status.oidcClients[]

Description:: 

Type:: object
Required:: 
* componentName
* componentNamespace



## .status.oidcClients[].conditions

Description:: 
Conditions are used to communicate the state of the oidcClients entry.
 Supported conditions include Available, Degraded and Progressing.
 If Available is true, the component is successfully using the configured client. If Degraded is true, that means something has gone wrong trying to handle the client configuration. If Progressing is true, that means the component is taking some action related to the oidcClients entry.
Type:: array

## .status.oidcClients[].conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example,
 type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"
 // other fields }
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.oidcClients[].currentOIDCClients

Description:: 
CurrentOIDCClients is a list of clients that the component is currently using.
Type:: array

## .status.oidcClients[].currentOIDCClients[]

Description:: 

Type:: object
Required:: 
* clientID
* issuerURL
* oidcProviderName



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/authentications
* DELETE: delete collection of Authentication
* GET: list objects of kind Authentication
* POST: create an Authentication
* /apis/config.openshift.io/v1/authentications/{name}
* DELETE: delete an Authentication
* GET: read the specified Authentication
* PATCH: partially update the specified Authentication
* PUT: replace the specified Authentication
* /apis/config.openshift.io/v1/authentications/{name}/status
* GET: read status of the specified Authentication
* PATCH: partially update status of the specified Authentication
* PUT: replace status of the specified Authentication

## /apis/config.openshift.io/v1/authentications

HTTP method:: DELETE
Description:: delete collection of Authentication



HTTP method:: GET
Description:: list objects of kind Authentication



HTTP method:: POST
Description:: create an Authentication







## /apis/config.openshift.io/v1/authentications/{name}



HTTP method:: DELETE
Description:: delete an Authentication





HTTP method:: GET
Description:: read the specified Authentication



HTTP method:: PATCH
Description:: partially update the specified Authentication





HTTP method:: PUT
Description:: replace the specified Authentication







## /apis/config.openshift.io/v1/authentications/{name}/status



HTTP method:: GET
Description:: read status of the specified Authentication



HTTP method:: PATCH
Description:: partially update status of the specified Authentication





HTTP method:: PUT
Description:: replace status of the specified Authentication





