# ClusterClass [cluster.x-k8s.io/v1beta1]


Description:: 
ClusterClass is a template which can be used to create managed topologies.
Type:: object

# Specification



## .spec

Description:: 
ClusterClassSpec describes the desired state of the ClusterClass.
Type:: object



## .spec.controlPlane

Description:: 
ControlPlane is a reference to a local struct that holds the details
for provisioning the Control Plane for the Cluster.
Type:: object
Required:: 
* ref



## .spec.controlPlane.machineHealthCheck

Description:: 
MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass.
This field is supported if and only if the ControlPlane provider template
referenced above is Machine based and supports setting replicas.
Type:: object



## .spec.controlPlane.machineHealthCheck.remediationTemplate

Description:: 
RemediationTemplate is a reference to a remediation template
provided by an infrastructure provider.
This field is completely optional, when filled, the MachineHealthCheck controller
creates a new object from the template referenced and hands off remediation of the machine to
a controller that lives outside of Cluster API.
Type:: object



## .spec.controlPlane.machineHealthCheck.unhealthyConditions

Description:: 
UnhealthyConditions contains a list of the conditions that determine
whether a node is considered unhealthy. The conditions are combined in a
logical OR, i.e. if any of the conditions is met, the node is unhealthy.
Type:: array

## .spec.controlPlane.machineHealthCheck.unhealthyConditions[]

Description:: 
UnhealthyCondition represents a Node condition type and value with a timeout
specified as a duration.  When the named condition has been in the given
status for at least the timeout value, a node is considered unhealthy.
Type:: object
Required:: 
* status
* timeout
* type



## .spec.controlPlane.machineInfrastructure

Description:: 
MachineInfrastructure defines the metadata and infrastructure information
for control plane machines.
This field is supported if and only if the control plane provider template
referenced above is Machine based and supports setting replicas.
Type:: object
Required:: 
* ref



## .spec.controlPlane.machineInfrastructure.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.controlPlane.metadata

Description:: 
Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane
if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the
ControlPlane.
At runtime this metadata is merged with the corresponding metadata from the topology.
This field is supported if and only if the control plane provider template
referenced is Machine based.
Type:: object



## .spec.controlPlane.namingStrategy

Description:: 
NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
Type:: object



## .spec.controlPlane.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.infrastructure

Description:: 
Infrastructure is a reference to a provider-specific template that holds
the details for provisioning infrastructure specific cluster
for the underlying provider.
The underlying provider is responsible for the implementation
of the template to an infrastructure cluster.
Type:: object
Required:: 
* ref



## .spec.infrastructure.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.patches

Description:: 
Patches defines the patches which are applied to customize
referenced templates of a ClusterClass.
Note: Patches will be applied in the order of the array.
Type:: array

## .spec.patches[]

Description:: 
ClusterClassPatch defines a patch which is applied to customize the referenced templates.
Type:: object
Required:: 
* name



## .spec.patches[].definitions

Description:: 
Definitions define inline patches.
Note: Patches will be applied in the order of the array.
Note: Exactly one of Definitions or External must be set.
Type:: array

## .spec.patches[].definitions[]

Description:: 
PatchDefinition defines a patch which is applied to customize the referenced templates.
Type:: object
Required:: 
* jsonPatches
* selector



## .spec.patches[].definitions[].jsonPatches

Description:: 
JSONPatches defines the patches which should be applied on the templates
matching the selector.
Note: Patches will be applied in the order of the array.
Type:: array

## .spec.patches[].definitions[].jsonPatches[]

Description:: 
JSONPatch defines a JSON patch.
Type:: object
Required:: 
* op
* path



## .spec.patches[].definitions[].jsonPatches[].valueFrom

Description:: 
ValueFrom defines the value of the patch.
Note: Either Value or ValueFrom is required for add and replace
operations. Only one of them is allowed to be set at the same time.
Type:: object



## .spec.patches[].definitions[].selector

Description:: 
Selector defines on which templates the patch should be applied.
Type:: object
Required:: 
* apiVersion
* kind
* matchResources



## .spec.patches[].definitions[].selector.matchResources

Description:: 
MatchResources selects templates based on where they are referenced.
Type:: object



## .spec.patches[].definitions[].selector.matchResources.machineDeploymentClass

Description:: 
MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in
.spec.workers.machineDeployments.
Type:: object



## .spec.patches[].definitions[].selector.matchResources.machinePoolClass

Description:: 
MachinePoolClass selects templates referenced in specific MachinePoolClasses in
.spec.workers.machinePools.
Type:: object



## .spec.patches[].external

Description:: 
External defines an external patch.
Note: Exactly one of Definitions or External must be set.
Type:: object



## .spec.variables

Description:: 
Variables defines the variables which can be configured
in the Cluster topology and are then used in patches.
Type:: array

## .spec.variables[]

Description:: 
ClusterClassVariable defines a variable which can
be configured in the Cluster topology and used in patches.
Type:: object
Required:: 
* name
* required
* schema



## .spec.variables[].metadata

Description:: 
Metadata is the metadata of a variable.
It can be used to add additional data for higher level tools to
a ClusterClassVariable.
Type:: object



## .spec.variables[].schema

Description:: 
Schema defines the schema of the variable.
Type:: object
Required:: 
* openAPIV3Schema



## .spec.variables[].schema.openAPIV3Schema

Description:: 
OpenAPIV3Schema defines the schema of a variable via OpenAPI v3
schema. The schema is a subset of the schema used in
Kubernetes CRDs.
Type:: object
Required:: 
* type



## .spec.workers

Description:: 
Workers describes the worker nodes for the cluster.
It is a collection of node types which can be used to create
the worker nodes of the cluster.
Type:: object



## .spec.workers.machineDeployments

Description:: 
MachineDeployments is a list of machine deployment classes that can be used to create
a set of worker nodes.
Type:: array

## .spec.workers.machineDeployments[]

Description:: 
MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster
provisioned using the ClusterClass.
Type:: object
Required:: 
* class
* template



## .spec.workers.machineDeployments[].machineHealthCheck

Description:: 
MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
Type:: object



## .spec.workers.machineDeployments[].machineHealthCheck.remediationTemplate

Description:: 
RemediationTemplate is a reference to a remediation template
provided by an infrastructure provider.
This field is completely optional, when filled, the MachineHealthCheck controller
creates a new object from the template referenced and hands off remediation of the machine to
a controller that lives outside of Cluster API.
Type:: object



## .spec.workers.machineDeployments[].machineHealthCheck.unhealthyConditions

Description:: 
UnhealthyConditions contains a list of the conditions that determine
whether a node is considered unhealthy. The conditions are combined in a
logical OR, i.e. if any of the conditions is met, the node is unhealthy.
Type:: array

## .spec.workers.machineDeployments[].machineHealthCheck.unhealthyConditions[]

Description:: 
UnhealthyCondition represents a Node condition type and value with a timeout
specified as a duration.  When the named condition has been in the given
status for at least the timeout value, a node is considered unhealthy.
Type:: object
Required:: 
* status
* timeout
* type



## .spec.workers.machineDeployments[].namingStrategy

Description:: 
NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
Type:: object



## .spec.workers.machineDeployments[].strategy

Description:: 
The deployment strategy to use to replace existing machines with
new ones.
NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
Type:: object



## .spec.workers.machineDeployments[].strategy.rollingUpdate

Description:: 
Rolling update config params. Present only if
MachineDeploymentStrategyType = RollingUpdate.
Type:: object



## .spec.workers.machineDeployments[].template

Description:: 
Template is a local struct containing a collection of templates for creation of
MachineDeployment objects representing a set of worker nodes.
Type:: object
Required:: 
* bootstrap
* infrastructure



## .spec.workers.machineDeployments[].template.bootstrap

Description:: 
Bootstrap contains the bootstrap template reference to be used
for the creation of worker Machines.
Type:: object
Required:: 
* ref



## .spec.workers.machineDeployments[].template.bootstrap.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.workers.machineDeployments[].template.infrastructure

Description:: 
Infrastructure contains the infrastructure template reference to be used
for the creation of worker Machines.
Type:: object
Required:: 
* ref



## .spec.workers.machineDeployments[].template.infrastructure.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.workers.machineDeployments[].template.metadata

Description:: 
Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.
At runtime this metadata is merged with the corresponding metadata from the topology.
Type:: object



## .spec.workers.machinePools

Description:: 
MachinePools is a list of machine pool classes that can be used to create
a set of worker nodes.
Type:: array

## .spec.workers.machinePools[]

Description:: 
MachinePoolClass serves as a template to define a pool of worker nodes of the cluster
provisioned using ClusterClass.
Type:: object
Required:: 
* class
* template



## .spec.workers.machinePools[].namingStrategy

Description:: 
NamingStrategy allows changing the naming pattern used when creating the MachinePool.
Type:: object



## .spec.workers.machinePools[].template

Description:: 
Template is a local struct containing a collection of templates for creation of
MachinePools objects representing a pool of worker nodes.
Type:: object
Required:: 
* bootstrap
* infrastructure



## .spec.workers.machinePools[].template.bootstrap

Description:: 
Bootstrap contains the bootstrap template reference to be used
for the creation of the Machines in the MachinePool.
Type:: object
Required:: 
* ref



## .spec.workers.machinePools[].template.bootstrap.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.workers.machinePools[].template.infrastructure

Description:: 
Infrastructure contains the infrastructure template reference to be used
for the creation of the MachinePool.
Type:: object
Required:: 
* ref



## .spec.workers.machinePools[].template.infrastructure.ref

Description:: 
Ref is a required reference to a custom resource
offered by a provider.
Type:: object



## .spec.workers.machinePools[].template.metadata

Description:: 
Metadata is the metadata applied to the MachinePool.
At runtime this metadata is merged with the corresponding metadata from the topology.
Type:: object



## .status

Description:: 
ClusterClassStatus defines the observed state of the ClusterClass.
Type:: object



## .status.conditions

Description:: 
Conditions defines current observed state of the ClusterClass.
Type:: array

## .status.conditions[]

Description:: 
Condition defines an observation of a Cluster API resource operational state.
Type:: object
Required:: 
* lastTransitionTime
* status
* type



## .status.variables

Description:: 
Variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.
Type:: array

## .status.variables[]

Description:: 
ClusterClassStatusVariable defines a variable which appears in the status of a ClusterClass.
Type:: object
Required:: 
* definitions
* name



## .status.variables[].definitions

Description:: 
Definitions is a list of definitions for a variable.
Type:: array

## .status.variables[].definitions[]

Description:: 
ClusterClassStatusVariableDefinition defines a variable which appears in the status of a ClusterClass.
Type:: object
Required:: 
* from
* required
* schema



## .status.variables[].definitions[].metadata

Description:: 
Metadata is the metadata of a variable.
It can be used to add additional data for higher level tools to
a ClusterClassVariable.
Type:: object



## .status.variables[].definitions[].schema

Description:: 
Schema defines the schema of the variable.
Type:: object
Required:: 
* openAPIV3Schema



## .status.variables[].definitions[].schema.openAPIV3Schema

Description:: 
OpenAPIV3Schema defines the schema of a variable via OpenAPI v3
schema. The schema is a subset of the schema used in
Kubernetes CRDs.
Type:: object
Required:: 
* type



# API endpoints

The following API endpoints are available:

* /apis/cluster.x-k8s.io/v1beta1/clusterclasses
* GET: list objects of kind ClusterClass
* /apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses
* DELETE: delete collection of ClusterClass
* GET: list objects of kind ClusterClass
* POST: create a ClusterClass
* /apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses/{name}
* DELETE: delete a ClusterClass
* GET: read the specified ClusterClass
* PATCH: partially update the specified ClusterClass
* PUT: replace the specified ClusterClass
* /apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses/{name}/status
* GET: read status of the specified ClusterClass
* PATCH: partially update status of the specified ClusterClass
* PUT: replace status of the specified ClusterClass

## /apis/cluster.x-k8s.io/v1beta1/clusterclasses

HTTP method:: GET
Description:: list objects of kind ClusterClass



## /apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses

HTTP method:: DELETE
Description:: delete collection of ClusterClass



HTTP method:: GET
Description:: list objects of kind ClusterClass



HTTP method:: POST
Description:: create a ClusterClass







## /apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses/{name}



HTTP method:: DELETE
Description:: delete a ClusterClass





HTTP method:: GET
Description:: read the specified ClusterClass



HTTP method:: PATCH
Description:: partially update the specified ClusterClass





HTTP method:: PUT
Description:: replace the specified ClusterClass







## /apis/cluster.x-k8s.io/v1beta1/namespaces/{namespace}/clusterclasses/{name}/status



HTTP method:: GET
Description:: read status of the specified ClusterClass



HTTP method:: PATCH
Description:: partially update status of the specified ClusterClass





HTTP method:: PUT
Description:: replace status of the specified ClusterClass





